@import "bourbon/bourbon";
@import "_common";

/*-----------------------------------*\
 *
 *  $TOAST-GRID
 *
 *  An insane grid.
 *  You'd be mad to use it.
 *
 *  Usage
 *  =====
 *
 *  Assuming default values:
 *
 *  <div class="grid">
 *    <div class="grid__col grid__col--1-of-2">
 *      A half-width column.
 *    </div>
 *    <div class="grid__col grid__col--1-of-4 grid__col--pull-1-of-4">
 *      A quarter, pulled left by its own width. You get this, right?
 *    </div>
 *  </div>
 *
 *
 *  Customisation
 *  =============
 *
 *  $grid-namespace and $grid-column-namespace
 *  adjusts the class names for the grid. With
 *  default values, grid wrappers have a class
 *  of '.grid' and columns '.grid__col'.
 *
 *  $col-groups(n) adjusts column divisions.
 *  For example, $col-groups(12) will produce
 *  a 12-column grid. $col-groups(3,6,8)
 *  will produce a 3-, 6-, and 8-column grid.
 *
 *  $gutter-width is—you guessed it—the gutter
 *  width. Accepts any unit.
 *
 *  That's it. Have fun.
 *
 *\*----------------------------------- */

// Namespaces
// This stops me from being overzealous with enforcing classes
$WN-grid-namespace: "mosaic" !default;
$WN-grid-column-namespace: "mosaic__panel" !default;

// $col-groups are the column groups you want
// For example, $col-groups: (3, 4, 5) will output:
// .grid__col--n-of-3, .grid__col--n-of-4, [...]
$WN-col-groups: 2, 3, 4, 5, 6, 8, 12 !default;


.#{$WN-grid-namespace} {
  list-style: none;
  font-size: 0;
  
  >.#{$WN-grid-column-namespace}--1-of-1 {
    width: calc(100vw / 1);
    height: 512px;
    max-height: calc(100vw / 2);
  }

  >.#{$WN-grid-column-namespace}--1-of-2 {
    width: calc(100vw / 2);
    max-height: calc(100vw / 2);
    height: 512px;
  }
  >.#{$WN-grid-column-namespace}--1-of-3 {
    width: calc(100vw / 3);
    height: calc(100vw / 3);
  }
  >.#{$WN-grid-column-namespace}--2-of-3 {
    width: calc(200vw / 3);
    height: calc(100vw / 3);
  }
  >.#{$WN-grid-column-namespace}--1-of-4 {
    width: calc(100vw / 4);
    height: calc(100vw / 4);
  }
  >.#{$WN-grid-column-namespace}--2-of-4 {
    width: calc(200vw / 4);
    height: calc(100vw / 4);
  }
  >.#{$WN-grid-column-namespace}--3-of-4 {
    width: calc(300vw / 4);
    height: calc(100vw / 4);
  }
  >.#{$WN-grid-column-namespace}--1-of-5 {
    width: calc(100vw / 5);
    height: calc(100vw / 5);
  }
  >.#{$WN-grid-column-namespace}--2-of-5 {
    width: calc(200vw / 5);
    height: calc(100vw / 5);
  }
  >.#{$WN-grid-column-namespace}--3-of-5 {
    width: calc(300vw / 5);
    height: calc(100vw / 5);
  }
  >.#{$WN-grid-column-namespace}--4-of-5 {
    width: calc(400vw / 5);
    height: calc(100vw / 5);
  }
  >.#{$WN-grid-column-namespace}--1-of-6 {
    width: calc(100vw / 6);
    height: calc(100vw / 6);
  }
  >.#{$WN-grid-column-namespace}--2-of-6 {
    width: calc(200vw / 6);
    height: calc(100vw / 6);
  }
  >.#{$WN-grid-column-namespace}--3-of-6 {
    width: calc(300vw / 6);
    height: calc(100vw / 6);
  }
  >.#{$WN-grid-column-namespace}--4-of-6 {
    width: calc(400vw / 6);
    height: calc(100vw / 6);
  }
  >.#{$WN-grid-column-namespace}--5-of-6 {
    width: calc(500vw / 6);
    height: calc(100vw / 6);
  }




   .#{$WN-grid-column-namespace}, {
    @include display(inline-flex);
    @include justify-content(center);
    @include align-items(center);
    margin: 0;
    //height: 512px;
    padding: 2rem 0;
    position: relative;
    box-sizing: border-box;
    vertical-align: top;
    overflow: hidden;
    @media (max-width: $WN-breakpoint-medium) and (min-width: $WN-breakpoint-small) {
      &[class*="#{$WN-grid-column-namespace}--m-"] {
      }

      &.#{$WN-grid-column-namespace}--m-1-of-1 {
        width: calc(100vw / 1);
        height: 512px;
        max-height: calc(100vw / 2);
      }
      
      &.#{$WN-grid-column-namespace}--m-1-of-2 {
        width: calc(100vw / 2);
        max-height: calc(100vw / 2);
        height: 512px;
      }

      &.#{$WN-grid-column-namespace}--m-1-of-3 {
        width: calc(100vw / 3);
        height: calc(100vw / 3);
      }

      &.#{$WN-grid-column-namespace}--m-2-of-3 {
        width: percentage(2 / 3);
      }

      &.#{$WN-grid-column-namespace}--m-1-of-4 {
        width: percentage(1 / 4);
      }

      &.#{$WN-grid-column-namespace}--m-2-of-4 {
        @extend .#{$WN-grid-column-namespace}--m-1-of-2;
      }

      &.#{$WN-grid-column-namespace}--m-3-of-4 {
        height: percentage(3 / 4);
      }
    }

    @media (max-width: $WN-breakpoint-small) {
      &[class*="#{$WN-grid-column-namespace}--s-"] {
        display: inline-block;
        //margin-right: -0.24em;
      }

      &.#{$WN-grid-column-namespace}--s-1-of-1 {
        width: calc(100vw / 1);
        height: 512px;
        max-height: calc(100vw / 2);
      }

      &.#{$WN-grid-column-namespace}--s-1-of-2 {
        width: calc(100vw / 2);
        max-height: calc(100vw / 2);
        height: 512px;
      }

      &.#{$WN-grid-column-namespace}--s-1-of-3 {
        width: calc(100vw / 3);
        height: calc(100vw / 3);
      }

      &.#{$WN-grid-column-namespace}--s-2-of-3 {
        width: percentage(2 / 3);
      }

      &.#{$WN-grid-column-namespace}--s-1-of-4 {
        width: percentage(1 / 4);
      }

      &.#{$WN-grid-column-namespace}--s-2-of-4 {
        @extend .#{$WN-grid-column-namespace}--s-1-of-2;
      }

      &.#{$WN-grid-column-namespace}--s-3-of-4 {
        width: percentage(3 / 4);
      }
    }
  }

  // Centers the column in the grid and clears the row of all other columns
  .#{$WN-grid-column-namespace}--centered {
    display: block;
    margin-left: auto;
    margin-right: auto;
  }

  // Displays the column as the first in its row
  .#{$WN-grid-column-namespace}--d-first {
    float: left;
  }

  // Displays the column as the last in its row
  .#{$WN-grid-column-namespace}--d-last {
    float: right;
  }

  // Removes gutters from the columns
  &.grid--no-gutter {
    margin-left: 0;
    width: 100%;

    .#{$WN-grid-column-namespace} {
      padding-left: 0;
    }

    .#{$WN-grid-column-namespace}--span-all {
      margin-left: 0;
      width: 100%;
    }
  }

  // Align column to the bottom.
  .#{$WN-grid-column-namespace}--ab {
    vertical-align: bottom;
  }

  // Align column to the middle.
  .#{$WN-grid-column-namespace}--am {
    vertical-align: middle;
  }
  
  .mosaic__panel-caption {
      display: none;
      position: absolute;
      height: 3rem;
      width: 100%;
      max-width: 40rem;
      left: 0;
      bottom: 0;
      font-size: 1rem;
      font-weight: 300;
      padding: 0 1rem;
      margin: 0 0 0 50%;
      @include transform(translateX(-50%));
      text-align: center;
      h4, a {
          display: inline-block;
          font-size: 1rem;
          color: #fff;
          font-weight: 200;
          line-height: 1rem;
          padding: .5rem 0;
          vertical-align: middle;
          margin: .5rem 0;
      }
      a {
          float: right;
          padding: 0.375rem .75rem;
          border-radius: 1rem;
          font-size: .75rem;
          font-weight: 600;
          line-height: .75rem;
          margin: .75rem 0;
          box-shadow: inset 0 0 0 2px #fff;
          &:hover {
              box-shadow: 0 1px 2px rgba(0,0,0,0.125);
              background: #fff;
              color: currentcolor;
              text-decoration: none;
          }
      }
  }
}
